pr: none

trigger: none

parameters:

# We could map this parameter to a combination of default triplets for Mac and windows, as well as the default feature flags to pass to each
# for example, ffmpeg might map to: ffmpeg[avcodec,avdevice,avfilter,avformat,avresample,postproc,swscale,swresample,mp3lame,sdl2,zlib,dav1d]
- name: packageName
  displayName: Package to install (builds as a dynamic library, unless otherwise specified)
  type: string
  values:
  - dawn
  - ffmpeg
  - ffmpeg-cloud-gpl
  - glslang
  - hunspell
  - hunspell-debug
  - kaldi
  - libpng
  - libzip-static
  - libzip-dynamic
  - minizip
  - openblas
  - openssl-static
  - opencv4
  - pango
  - sqlite3
  - sqlite-modern-cpp
  - tinyxml
  - whispercpp
  - whispercpp-basic

- name: publishToGitHubRelease
  displayName: Publish built package artifacts to a tagged release in the GitHub repo (A package name + version tag will be created like "somepackage-1.2.3")
  type: boolean
  default: true

- name: appendStringToGitHubRelease
  displayName: Append a string to a GitHub release (If "20240401" specified, then "somepackage-1.2.3" would become "somepackage-1.2.3--20240401")
  type: string
  default: ' '

stages:
- template: templates/build.yml
  parameters:
    packageName: ${{ parameters.packageName }}
    publishToPipelineArtifacts: true
    publishToGitHubRelease: ${{ parameters.publishToGitHubRelease }}
    appendStringToGitHubRelease: ${{parameters.appendStringToGitHubRelease}}
    isPreconfiguredBuild: true
